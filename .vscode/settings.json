{
  /** BEGIN ESLINT OPTIONS */
  "eslint.packageManager": "yarn",
  "eslint.onIgnoredFiles": "warn",
  /** END ESLINT OPTIONS */

  /** BEGIN EDITOR OPTIONS */
  // BEGIN FILES OPTIONS */
  "files.associations": {
    "*.env.defaults": "env" // associates the extension IronGeek.vscode-env with .env.example files
  },
  // END FILES OPTIONS */

  // BEGIN FORMAT ON SAVE OPTIONS */
  "editor.defaultFormatter": "esbenp.prettier-vscode", // sets the default formatter to vscode's prettier plugin
  "editor.formatOnSave": false, // disable the default format on-save options, prefer eslint's fixes
  "[json]": {
    "editor.formatOnSave": true // override default as eslint has now autofixes for this file extension
  },
  "[jsonc]": {
    "editor.formatOnSave": true // override default as eslint has now autofixes for this file extension
  },
  "[yaml]": {
    "editor.formatOnSave": true // override default as eslint has now autofixes for this file extension
  },
  "[markdown]": {
    "editor.formatOnSave": true // override default as eslint has now autofixes for this file extension
  },
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": true // enables eslint to fix files on-save
  },
  "[solidity]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true // override default as eslint has now autofixes for this file extension
  },
  "[env]": {
    "editor.defaultFormatter": "IronGeek.vscode-env",
    "editor.formatOnSave": true
  },
  // END FORMAT ON SAVE OPTIONS

  // BEGIN MISC OPTIONS
  "editor.detectIndentation": false,
  // END MISC OPTIONS
  /** END EDITOR OPTIONS */

  /** BEGIN TYPESCRIPT OPTIONS */
  "typescript.tsdk": "node_modules/typescript/lib",
  /** END TYPESCRIPT OPTIONS */

  /** BEGIN FILE WATCHER OPTIONS */
  "files.watcherExclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/**": true,
    "**/.next/**": true,
    "**/sessions/**": true,
    "**/tmp/**": true,
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/node_modules": true,
    "**/bower_components": true,
    "**/dist/**": true,
    "**/lib/**": true,
    "**/log/**": true,
    "**/logs/**": true,
    "**/.fdk/**": true
  },
  /** END FILE WATCHER OPTIONS */

  /** BEGIN SOLIDITY OPTIONS */
  "solidity.linter": "solhint",
  "solidity.remappings": [
    "@openzeppelin/=@nori-dot-com/contracts/node_modules/@openzeppelin/"
  ],
  "solidity.compileUsingRemoteVersion": "0.8.15",
  /** END SOLIDITY OPTIONS */

  /** BEGIN CYPRESS OPTIONS */
  "json.schemas": [
    {
      "fileMatch": ["cypress.json"],
      "url": "https://on.cypress.io/cypress.schema.json"
    }
  ],
  /** END CYPRESS OPTIONS */

  /** BEGIN CSPELL OPTIONS */
  "cSpell.customDictionaries": {
    "custom-words": {
      "name": "custom-words",
      "path": "@nori-dot-com/nori-dot-com/packages/cspell/custom-words.txt",
      "addWords": true,
      "scope": "user"
    }
  },
  /** END CSPELL OPTIONS */

  /** BEGIN TYPE CHECKING OPTIONS */
  "js/ts.implicitProjectConfig.checkJs": true
  /** END TYPE CHECKING OPTIONS */
}
