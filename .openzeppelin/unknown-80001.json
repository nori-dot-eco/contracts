{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x0013B38Ffb2EA257427F5d3D5cb1af53e8AF8aC0",
    "txHash": "0x1ec9f593da40da63759b3061acf18f7c6bd845994f24c9e1b82972005d658822",
    "deployTransaction": {
      "hash": "0x1ec9f593da40da63759b3061acf18f7c6bd845994f24c9e1b82972005d658822",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x465d5a3fFeA4CD109043499Fa576c3E16f918463",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x77359400"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 15,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xfdc8a40c932a49ae5e2953b47c9feb1b3912172e47de45e0aa29442130e5030c",
      "s": "0x1aadf7c32de4a9d40a77d934eb115b4b615ecfd41d758799f42da509ae177d9a",
      "v": 160038,
      "creates": "0x0013B38Ffb2EA257427F5d3D5cb1af53e8AF8aC0",
      "chainId": 80001
    }
  },
  "proxies": [
    {
      "address": "0xff1518397F44EE39262b282e2F6f51E7023B689F",
      "txHash": "0x692e0e4189a3c068533653111e657d63e155e9a6f0720f3488be0bf91ad1137c",
      "kind": "transparent"
    },
    {
      "address": "0x50562ADF34935aeb8cC86e9bDc66eaBf79097A08",
      "txHash": "0xc1f248465a24f51f9cc408fe7ed9c1478b46b4dac7db438ac232077a92f60453",
      "kind": "transparent"
    },
    {
      "address": "0x1BE70016d4D5144124f77DDaB7504ea33d173C03",
      "txHash": "0x28ca9ef283bb614f8179bc05112355251560e381f542ab861324dca68f4dbd04",
      "kind": "transparent"
    },
    {
      "address": "0x83207e4a2caC1015bda1A794b57F708C4360924e",
      "txHash": "0x864c3691684cadbc980588065e15bf3b998a26661860a57a0d4e83954d2f963e",
      "kind": "transparent"
    },
    {
      "address": "0x143ddB67B749FeB5e2E1b2135bC55Dc8de729Db2",
      "txHash": "0x313ce4a22bfcb844fed3eb647a7b6d7ab7334ac7e1da9dd542b6124ca177b980",
      "kind": "transparent"
    },
    {
      "address": "0x8f9a093Ef35A1aa1E4103Ce3DbbE1197504c3ed4",
      "txHash": "0x8e90e61a8b59177ffc4deb97c5a260025fafd7fa8cfd4c14fdf487a66ed3c8da",
      "kind": "transparent"
    },
    {
      "address": "0x3A78013BD257DbEeD37704D981D289DF52D06Fb1",
      "txHash": "0xe19d33ae698809bf167c4155fdecc4aaf6dbd18c7ccf54f39aa72a4b5e253bbc",
      "kind": "transparent"
    },
    {
      "address": "0x8B32C0480Ab650D6ba23a5B7A13fE05E186Fa312",
      "txHash": "0x2f39397557ef41c6b5013ef3813d07840f67ce346ff4415b3894933af4609acd",
      "kind": "transparent"
    },
    {
      "address": "0x3325e2987D4C0804A020b2Ec4F9BcB3DD50014EE",
      "txHash": "0x0b7a19042bb1309f1b0e6e9593eb002efb464933f49b97195edc55b50bbc9c08",
      "kind": "transparent"
    },
    {
      "address": "0x6E6F16f2f18f9D4A670fC101b2cbfDCA77E389c9",
      "txHash": "0xcfc0a0d21ba58094387bad6f3a2a0ece87eafa594e8cec4a1b88c572768ce395",
      "kind": "transparent"
    },
    {
      "address": "0x6d1f7F5650EC9C5941B04D5C2Add659FF430642e",
      "txHash": "0x58892f565039ee9aa2529f1f85e8b7174f80bf733eb9f7d4b5f7ad53a466c47a",
      "kind": "transparent"
    },
    {
      "address": "0x4D705793e3dfeeE4A1c0331DAeC2b56D455F983D",
      "txHash": "0xe69314c480f7995bda1d8459c4e03ba45a4d854324f0427f8432a248512b1010",
      "kind": "transparent"
    },
    {
      "address": "0xC2d29f0f84bcB8bC41744C9a0c49dB4E5F39046c",
      "txHash": "0x6da12507c54eb8935b5c78e764f37efb1bbf6b58f1b8921690aef8f8636f2db1",
      "kind": "transparent"
    },
    {
      "address": "0xB1377e9Dd097f224910f13b50869dFdEEE5346FF",
      "txHash": "0x5272fb0aeb531e0cc96405a9a26aeceb0e17c8d756aecc2a0e16dd0bfe569ad7",
      "kind": "transparent"
    },
    {
      "address": "0x045cF0B7053710c694C12A084DF6E84df3fA9700",
      "txHash": "0xb8971669230bb821e3793ffb306486076f5d0c0e52db0ce4c1af32dba0ff3976",
      "kind": "transparent"
    },
    {
      "address": "0x409c41A2Ca0fde2C7C10CE38D8A41AE9Cc220857",
      "txHash": "0x2fb3166a4d27fe2d6cfbdbdc0aa3cc39ea1dce6401125736508b6684fd2f937b",
      "kind": "transparent"
    },
    {
      "address": "0x7471defCB61600Da355A84291d6fc03Fd3C2b5dD",
      "txHash": "0x3ac3a756b75ee11f4090c79351d144aa426105161f95cadd73a4acbfba45f524",
      "kind": "transparent"
    },
    {
      "address": "0xa12af47e014E4D947d023fd0C94eF77556C59104",
      "txHash": "0xd76bc5cf7a10456e6921e52dc6110aed8c5d7983075ed8a12c2c7a7698fe3924",
      "kind": "transparent"
    },
    {
      "address": "0xDE93D48405C9f18B588B68A4272b39373D1681BF",
      "txHash": "0xcfc94efacfa11cdc5622a3037261a9bab65de1905bc3fc8fc6ae9445e34fce6b",
      "kind": "transparent"
    },
    {
      "address": "0x82728810020D9108a5BCb9E83017A0ae9Ec6EB05",
      "txHash": "0x4c22aa6cc8b5e53b6f4f294a54e9b42d00d04113843c8fc11b27bbe0c7bb77f9",
      "kind": "transparent"
    },
    {
      "address": "0xD16c7F7e3492786B5A60f34F0169F4714c36Abfa",
      "txHash": "0x6e66f2a3d91721ec4946717ce8642bbda1b24e80a95e41a1278537dbff6c2e94",
      "kind": "transparent"
    },
    {
      "address": "0x1CCa17110034D0d630dD1900c9b45DA2200FE4F2",
      "txHash": "0x45cf54e8a3f68b0a7694d36594016a5dafaf992308006b002038dbf60ed50162",
      "kind": "transparent"
    },
    {
      "address": "0x53971bce2D459D76DDac30CaBD47FdD809D57C69",
      "txHash": "0x5935a51c9b0b4529c70fff2e4a66464b8d9b7995b02bb7c30163e9c42885344a",
      "kind": "transparent"
    },
    {
      "address": "0xee488f356BC93C970C4F7799d8995eD28fce3c5B",
      "txHash": "0xe18ce1bacd9c89464689b11313f5d4db7621e5d00e0ee40491bcac68229ed8fe",
      "kind": "transparent"
    },
    {
      "address": "0x43b581089726d91Ca69d1A3B8824228D29EB8F9f",
      "txHash": "0xf0f468fc5e70d06c4b9025f16353608bfac14cfa18fc618f1e058ed83a6dc294",
      "kind": "transparent"
    },
    {
      "address": "0xB6e2E7dddD3b0fd175f57a9141daBd3fc40E35A3",
      "txHash": "0xa3e0ab0330ba3d332d8676c3c587b48151ae1e0d41b6b27a3cc74848c9037101",
      "kind": "transparent"
    },
    {
      "address": "0xfCff8d6A4fB19b340fB1FdeC10eDEFe4C0150288",
      "txHash": "0x10ee3dd1f82df2e2af6ba16932c414f943b2b9a62e2a44488ada8e01ea1a867b",
      "kind": "transparent"
    },
    {
      "address": "0x89dD305fF60E3E56cc72d4859ccda01C7Ca19315",
      "txHash": "0x1cd0ecff32db6e2f640fe7e8efe94a397b88ece097c0e6763240866ca442b66f",
      "kind": "transparent"
    },
    {
      "address": "0x0Ee389f9Ed9404C6910772DfB240E9482FcbBb52",
      "txHash": "0x1c508cb2af2c4d3a24b58c5f18027bf8c2d3bda68157f900253043a35ba9b504",
      "kind": "transparent"
    },
    {
      "address": "0x5Aa7430C7237325d229F9101D044Fa53b7d4D39d",
      "txHash": "0xd5ff8ff5c48fc76fcd0e300ef56859210aba211bf53133cb8592601801d80fb2",
      "kind": "transparent"
    },
    {
      "address": "0x25Aa8a986cE09c03503318f0B80fE1edc2dd9f87",
      "txHash": "0x80b28c2de171c9c6c6da5d33de4534113ef1aee28dbec376ea321e0d1ff2a75e",
      "kind": "transparent"
    },
    {
      "address": "0xe05889189fA1d65EF09b728e474c61EabEdbF203",
      "txHash": "0x2fa1edf4bde2fbed98a2663db10e3d809fd80964174516985082cfbe62759625",
      "kind": "transparent"
    },
    {
      "address": "0x647A3d8f49804124118976A6A9de36192C7ECe93",
      "txHash": "0xc4774bd7a85e29b10833b8149a706feae57ae511501db1bd7160f7547d40f6b3",
      "kind": "transparent"
    },
    {
      "address": "0x1c2Ee68B81dDC4960Bfa8076ACB5dBb329833142",
      "txHash": "0xa49712fff96c0dc5ed5aec65d41f0fc19ebe5540a7da1844897d683692222733",
      "kind": "transparent"
    },
    {
      "address": "0x47718Fb99e934401537C54EC995c10c6C09FA90F",
      "txHash": "0x7cda00ce749e97a3f057a7ca21a5bb9f120b9607b82d972faa34721f4350ca0f",
      "kind": "transparent"
    },
    {
      "address": "0x59AcFFe41FD87858f1958872A5cC8863eFe2facc",
      "txHash": "0xaccebd98af4a660cf3236476c8cf5e484962270cc27ac1e6a63a23c8260c7035",
      "kind": "transparent"
    },
    {
      "address": "0xDFc62Ae26C41b9AECF9b7465aDf92e5918836fC2",
      "txHash": "0xe66d83c824fc62713ae02d4c40f20eb0ccc3aaf3f6d97bb02f34c7e884653d03",
      "kind": "transparent"
    },
    {
      "address": "0x5F84BF24D5F781ce148F9612c2E438E13f484A2B",
      "txHash": "0xe1ee48c9378fe8f88b126887847fe39360e1c60c72a3bd3ca06fdc8cfb711640",
      "kind": "transparent"
    },
    {
      "address": "0xCb28eb5AB4d34928230730a05fDE52846309531B",
      "txHash": "0x891102785423b4eba44b1c3512aeb6ab4c3f080ca2ddb2f3b718561af69fe680",
      "kind": "transparent"
    },
    {
      "address": "0x21d1c5EF0d9769F75A1CAF0c5a6Ea864C84e8c43",
      "txHash": "0xa6f99f275b5b2af5c68219fc4ff9768e187f3930cf5ee5d9d42b1b8ca90605e2",
      "kind": "transparent"
    },
    {
      "address": "0xE724FF3E6219f2c5D2651BD054AA495b0559e63E",
      "txHash": "0xe542e3ec895ac6433f9653bce75f149270c17093030f9b643f5f30aa516cd984",
      "kind": "transparent"
    },
    {
      "address": "0xBA57EBFAaeB003Ce8D823291B56a17B167701b38",
      "txHash": "0x00251c928e538c1c27bdf979155a9fdd6018fd04fceccb9e88ea52a1eb224e2a",
      "kind": "transparent"
    },
    {
      "address": "0x63D9b975c18E41E3dc2CD5554Fe9f6e1f34f16bb",
      "txHash": "0xb3c351e2ef432ce8b33cf7bdb945b59d1e0e2e851a15cdd54dba77f4687c1555",
      "kind": "transparent"
    },
    {
      "address": "0x0ea3AD215898b71FEE30DDd48Ae45c912059B0c6",
      "txHash": "0x1f1a88b4927f1b45223b39c2f1dd145d5ae9dc59b726bc18ec1b23870a6444a7",
      "kind": "transparent"
    },
    {
      "address": "0x0d1A7AB17A23bFc83484fe279291C6e42B3ef1Cc",
      "txHash": "0xf0bc2e072bdd6b02f2c5bb2cc698bccba9cfd357a0d8ffbee38604932d92ec21",
      "kind": "transparent"
    },
    {
      "address": "0x9E425c522e9103CB3495480Da664ec359D77D86a",
      "txHash": "0xda256d9d0913cc0e71bf0f7b3540d842a7cabe7d188fa53af5fb6b0f63a347d0",
      "kind": "transparent"
    },
    {
      "address": "0x5eff77AcA377876eEA164C19a9ee04460e0296cC",
      "txHash": "0x7f622b31fdc443485818a8d1e4c8c0d1fa3a5089931ef925e363953c7765f0d5",
      "kind": "transparent"
    },
    {
      "address": "0x1e96292723923E43A3fCEfd227eD46E6A47de7FE",
      "txHash": "0x2ff051eb7ea57102ffe0ffe6a69c0aaa2fe666bb8eb7f5142693e29848a3b97b",
      "kind": "transparent"
    },
    {
      "address": "0xaE17c5D374BfBb58748fA379C73084188a5cc2B8",
      "txHash": "0xc1a798192328e004c28b40a67011d6b849d9b5325be2ac8c2d8de5e652c0f592",
      "kind": "transparent"
    },
    {
      "address": "0x6E2756a46B6198A1f5fb3C3d73980C44180FCdA3",
      "txHash": "0xd90f8825d9d0004017cf67082547beee4db3d2a8b3d8d231f4eb9db87f6c5bf5",
      "kind": "transparent"
    },
    {
      "address": "0x2Ea87d15F7ba7Eb0B86F9cAC10262bfD5eDB580F",
      "txHash": "0xbc9157eae1c434a1ac2af04ed11232d126c17090589b0a1bb2258aadef17e6c4",
      "kind": "transparent"
    },
    {
      "address": "0x5FBbfA7842DFba370eD9fF00C5B348b9A6777283",
      "txHash": "0xe6964712feacc985ceba85b88bc9d9241e85a6f397c91493d49ae46cca6b6dd9",
      "kind": "transparent"
    },
    {
      "address": "0xC830a8F3A90661dAa98c890C2AE20342C43F1558",
      "txHash": "0x970025161768abc7f4430a13f0a2c9d14fa9dca1c14985dd31969eccc94f172c",
      "kind": "transparent"
    },
    {
      "address": "0xe68fcE5835a7E2C44c1bB8D99e07D3269737673b",
      "txHash": "0x98e6f8829fdc89e361e79f43f6b7c79d3ba148baaa9635a07ad7fee906474cbe",
      "kind": "transparent"
    },
    {
      "address": "0xbe0025A31778a3D594E77e4f250efEcD9784a996",
      "txHash": "0x0b0c0efa98b4f11d96c2bdda456821dc7535c2aeb399ec3443242059ad4ba506",
      "kind": "transparent"
    },
    {
      "address": "0xcd314Ab56BB41f766fF4c7f4FCFCD4093A54B8C9",
      "txHash": "0x9a88181bb967fc0f7f423ebac2bfac741d1b6cca2671241f206096313e06b359",
      "kind": "transparent"
    },
    {
      "address": "0x54cAbd57Ed6D410B4410fA7F1B646584eB251Ca0",
      "txHash": "0x2fe9366fd313f300c9a6a37f16bed16d89822b1463edff31eb2fae89cd57a71a",
      "kind": "transparent"
    },
    {
      "address": "0x7402F74e8Ce8CB77BcF6BF275276B362ca73c2e5",
      "txHash": "0xe010fec9cc585dca7b75c663e762921de3e0f118fb9cdb042d20620f47c4364c",
      "kind": "transparent"
    },
    {
      "address": "0x26AF153f0CF34501a917d7873DDBea05d20F5A58",
      "txHash": "0x9ee5e39516a8f1d44cfec605c0dfe74d2292d9620a706ebfb832651f9171db97",
      "kind": "transparent"
    },
    {
      "address": "0x08B8B5e2525075066D93D241C1F31cA45f9981F8",
      "txHash": "0x3e26baaa7f7c1ea6e1080ed708599ed8d4e7ae062d0aa5800c12ffde5cd0803a",
      "kind": "transparent"
    },
    {
      "address": "0xe1c0e17979dEeB53d4E10cE870FA069F39acF27a",
      "txHash": "0xe31936295206c414485f2569e5887711d5297d05fb22e17f18e6d10cce3924df",
      "kind": "transparent"
    },
    {
      "address": "0x888Abb2b83f4B0BeA56290eb030861aF3cECfdE4",
      "txHash": "0x39d219b5e3f9dfb343fc26497a184ed1b90c8c9f7e881c7f97ed3144bbdfb231",
      "kind": "transparent"
    },
    {
      "address": "0x9f94ebF62a4b95D71DA29C2718C90A6002FdFC7B",
      "txHash": "0x8df811849d67d77824f5a8b4f813714a4e56536f152f7da2bdfa8bf630c0e2ae",
      "kind": "transparent"
    },
    {
      "address": "0x5468De56c2BD0b05cB8f22944A79Cbeb97D847C8",
      "txHash": "0x78c677088da9c3f9d7aed942dbba991d7a0cc1a023f1f65a4b267a1c8e811425",
      "kind": "transparent"
    },
    {
      "address": "0x66A84E59502846770a16b1Fe8bfd30AEd5710b15",
      "txHash": "0xacb75dfe92a1df8e5b7ea4c4e6ed06f4d54cbc259f6cc73141d9f789437ad0db",
      "kind": "transparent"
    },
    {
      "address": "0x61329dE2f9c5E06CDc9e15453CaA306b00a9c69d",
      "txHash": "0x3f3195fe86ee6135f0f12b0a39966907d480f72977876d4e983f8a657ac0e4e4",
      "kind": "transparent"
    },
    {
      "address": "0x6de740daec0f67AcB467206A859F8f6b052A2869",
      "txHash": "0xaa7f379a2ae4240a5207028f996725a357b73835722bab0c43c30133317ef3e0",
      "kind": "transparent"
    },
    {
      "address": "0x583c7DF991405A97673429a4D963780Ca818E678",
      "txHash": "0xd623c2de33758d700fc21064c57810b7ea0b9b5d479a9a212cad41c26c9dab07",
      "kind": "transparent"
    },
    {
      "address": "0x843834d5a4a9C6B08cC776Da8bEc64Cd80BD369f",
      "txHash": "0x9029b2e8347f8348d7c47b546a3fd828453340c152d271aa926e053a50dd7c93",
      "kind": "transparent"
    },
    {
      "address": "0xE7EE6364fA113D108AFFA32DeBd8DC3Da36bA620",
      "txHash": "0x70e9b9a894346d06daa574a782fdbe26de6b3eb660a272f394354557964b9e0a",
      "kind": "transparent"
    },
    {
      "address": "0xe8332288e850E0539730823c9105cd3fc4203D27",
      "txHash": "0xd11a0cefa03068760419154c05e978486817f48096e0aeb0ab94858658631c22",
      "kind": "transparent"
    },
    {
      "address": "0x55A5a3F4B106f99C142d0C1E17a9BE11D6c37E72",
      "txHash": "0x32fbdef7eee4a9c54d277c5f6f427c030e21ab412e67ae80980c27e90db6adcf",
      "kind": "transparent"
    },
    {
      "address": "0xf9f90CaEf11c4af564f242b1DB932EAbeDD521b8",
      "txHash": "0xb6cd9c20ec7d000ace09df076b64a71c636bf52cdc58976ccc8c936db9739e6d",
      "kind": "transparent"
    },
    {
      "address": "0x5fFAC742161E09da3b4f131e9E57646b41c7064a",
      "txHash": "0xa1a62cacf73fcc5bdd88d1484872391a2d2d6d632f153954f8c680420f8e41a3",
      "kind": "transparent"
    },
    {
      "address": "0x8629c235d39B2d0782c1B455e188Ee4e86bb5F55",
      "txHash": "0x570420fded0f163dee1650171889b3887dcc793c25aa5cc8a25d1eea483a58f6",
      "kind": "transparent"
    },
    {
      "address": "0x939559B44A88fbA3D5281eD130b78156f4b3782e",
      "txHash": "0x59766b1aa3ab9862ed0b54dab830d6134b9376e92781f30d250bf742e1636510",
      "kind": "transparent"
    },
    {
      "address": "0x85DD6f15A7487DFbB3B8D0Ea190dbBbF58bf6E1E",
      "txHash": "0xbfaac97ae7e6bdaca2f879ca07806b9ca60302908a693081b32cef4a2709e026",
      "kind": "transparent"
    },
    {
      "address": "0xBcD85BdED0C163FEA8dF09b3e83797523E4dA5DA",
      "txHash": "0xf159735266efec6a889f392a22220494425b8f4451605301d42fd9d99cc4ae9e",
      "kind": "transparent"
    },
    {
      "address": "0x685dBB339e482195634273366Ce6B10AF005dB29",
      "txHash": "0x6422c595878c0771ecbaa6b51f5ef2ff077a4f7820cc337b534d35bd038e7828",
      "kind": "transparent"
    },
    {
      "address": "0x11F56164f1cf8bF011e5ab55500989C17570AAE1",
      "txHash": "0xc1f141a4ae981c6ba3f541bfa02d58257a2fda6750c4fdba6d4444902145f634",
      "kind": "transparent"
    },
    {
      "address": "0x0034a68E5F6bd4dd07a4Bb67f648E071020Ad7e8",
      "txHash": "0x1238d0a4e0420c6b46ea03a975a2a618e34ad4416cf86deaedb4fecd58400bc4",
      "kind": "transparent"
    },
    {
      "address": "0xa4f888169b2Bc170F2d049D7b96E1D8c3Ba28E19",
      "txHash": "0x99da1a285220bfe306a6801c4b6ce1cb08b5f6d61f6a1d803a42ced0c49f3991",
      "kind": "transparent"
    },
    {
      "address": "0xA1A76076D1324471c90A68A16A7085Fb71189b1A",
      "txHash": "0xa95ef657668f79e988da155690f9a179a60af4ee35027ab131fe04823388d2ca",
      "kind": "transparent"
    },
    {
      "address": "0xB346014D69e9f113a34d77C5259b95335ad15535",
      "txHash": "0x6bab3689d5f218d538281969a674b6936c7eac6ac579741eaf972195de85b0ce",
      "kind": "transparent"
    },
    {
      "address": "0xE952B8C3D6EDB706f25f392947A93C6a9434DA98",
      "txHash": "0xee0633aed030ee43d9195bd614431d51b7d258e6538aee3660c6dfe2134ab0de",
      "kind": "transparent"
    },
    {
      "address": "0x82eF68D1EDB87Af2F3692469595FfafeC69f3792",
      "txHash": "0x7de0897e377b5eed56718862ce14c574f83f162d455c5c319d8c9aa6b1bd724b",
      "kind": "transparent"
    },
    {
      "address": "0x758a6Ba2713fe562AADcBa4eCd0DA9683b1f441a",
      "txHash": "0x7be532ddb5e53af0acaf6175f72d2909089b755d6907e0fbed01be385850110f",
      "kind": "transparent"
    },
    {
      "address": "0xA088f36A3660242f85D06C21a29648bABb715E6b",
      "txHash": "0xfba97c50d1df4261356bae50b12bf5c303c711240854c1c2f97ddc1fea2817fb",
      "kind": "transparent"
    },
    {
      "address": "0x528d082c2A53517Dd2D354886c04D4F917caE81E",
      "txHash": "0xc072045b42aa518eb4c0fc509a6b0fb5287d9b5ce31d9db7ce4cd089301bc6df",
      "kind": "transparent"
    },
    {
      "address": "0x1d04623377A7005d78eb4f561803cB3aA434F94F",
      "txHash": "0xd2dd0c7b097a0edc64109521029f42a512ff38874c095a59312c28492457fde0",
      "kind": "transparent"
    },
    {
      "address": "0x270E756884e556eae5b15FA76A964De0cC9fA277",
      "txHash": "0xd649dfe1a891bc08ba3149099972e0302649b544fed4c303ab1567440dab8f80",
      "kind": "transparent"
    },
    {
      "address": "0x0b710Ad308c5bF25De18122305b5966F515c5f23",
      "txHash": "0xff88540a8931903bfc109bf52be1a5204d6aae833aee5128ac7bb033172a505e",
      "kind": "transparent"
    },
    {
      "address": "0x1bAB6eFDcEcEf4a4b2BdCd06Ee38667227b16A7A",
      "txHash": "0x81f68ccbaa865ffdc8699ba49dcb14d48b9a0f04254a232b83d1b1853cfdc3db",
      "kind": "transparent"
    },
    {
      "address": "0x75D7e9b7B3267391e7142816BE2F4feb3745a832",
      "txHash": "0x48a8ab4f428345e82a8362cfd4c1522064a974b5e8784cff5357e858d53e58eb",
      "kind": "transparent"
    },
    {
      "address": "0xAF0C93271CC6Bfccc9e56e7709745CD416486001",
      "txHash": "0x89282735ca67433734b7957efff801506f748c7d13f584c7d67e9acaaad08c23",
      "kind": "transparent"
    },
    {
      "address": "0x57d6cCCB7a10BE1EF567c9281B0f78903Cdfc063",
      "txHash": "0xe38970b22f2b54c06c46bab70fae8abc38a01821f898578da04dfb6d7f65cfc3",
      "kind": "transparent"
    },
    {
      "address": "0xC61B6B68b5ADC922EE6a07cc35D96c515f4fA156",
      "txHash": "0x9b5c5e9d99dc350c3f72c83fabb547a6abf4131021bcccf72ce9f1344004967c",
      "kind": "transparent"
    },
    {
      "address": "0x7c4C9Ab27bAC590c9170ebB30f24B7f595956552",
      "txHash": "0xb1cc73cf2b7ee0b2eb3428adb4fa424c35f558307b20081cae407fef05d10721",
      "kind": "transparent"
    },
    {
      "address": "0x1055AeA0041a1a042865BCb2564dEAC3544c6763",
      "txHash": "0xba6de7830e5f94037b728cf293bb1aeb9358d04636cbefcf61fe58caf2618e1b",
      "kind": "transparent"
    },
    {
      "address": "0x22c832a2FDc90C899CBe9ccc17726B7A54194443",
      "txHash": "0xf39bef6b801433ab61e73e887c8e659a012daea844212c7b9fc6275579dd2864",
      "kind": "transparent"
    },
    {
      "address": "0x878416Bf434347329D0386960BB4369BeaBA5EE6",
      "txHash": "0x6d1138f86e2fa59d6ec06c2739cc7c3da44ebc163e1221cf0f795d2db5d64754",
      "kind": "transparent"
    },
    {
      "address": "0xE862179F166044f3839AA0cd7F76E0eA47752Ad1",
      "txHash": "0x4545102326e0f8f361344b1ffe90058029d5788e896f810a3344f773e2ef7a81",
      "kind": "transparent"
    },
    {
      "address": "0xAFC6Ef9fc3b55dB4fFbB47699C23E5A0115dE734",
      "txHash": "0x411a6592cf53d50469eda1df48f4611e7e959c1f8aadc58aee82ffad1e978d76",
      "kind": "transparent"
    },
    {
      "address": "0x7d4f414ec4F7c8707BDf7B41c10e1B81434f2cEe",
      "txHash": "0x634e9ef28fe705e8762124d59f426614961dbd19c060ff2b3e4617ac312fba94",
      "kind": "transparent"
    },
    {
      "address": "0xf0FCfd30350adB21eC3395D10d0Cb2C552652d54",
      "txHash": "0x75ea2e0cfb71a7da199d95e66ec15fc93d24722dfd43177aa00649a2775c02e5",
      "kind": "transparent"
    },
    {
      "address": "0x59f8767d4b6F1B7fC673cd54f387b5B6623D8731",
      "txHash": "0x1889d27f8b155b32b675dbda0cf4e662fa1eab6b61e0a4ca87f52dd8d7832f6b",
      "kind": "transparent"
    },
    {
      "address": "0x27d8AB4cCEce2D937861E5aa6d65aF6B5A786787",
      "txHash": "0x129969ac7c5db50460e4c8e7dc0f7bd579ff09aebed124a50d891a315d8853fc",
      "kind": "transparent"
    },
    {
      "address": "0xE9501d0022Db3Cd15052F5f1d6442249652c045b",
      "txHash": "0x0b2149b4123e4b748273cd68c30a4170e4fbfecd341fbf0a74f6b692465bf9b2",
      "kind": "transparent"
    },
    {
      "address": "0x3d87E1DadaF6836fcd3b8D32dA49416283007e8D",
      "txHash": "0x7561a6f897bbb0db40ca82079ea3883b5501a7b699b683ae3e4710fa5238301a",
      "kind": "transparent"
    },
    {
      "address": "0xaa7848c15F2883C7BA493B7B9fc90412e6123AB1",
      "txHash": "0xfef5cea08d00292364c2bbdcefd84f0ff4180eb0ec5fda73796f2ce051bd7991",
      "kind": "transparent"
    },
    {
      "address": "0xF98BA51De201764D42C0A0602d037cb447B56470",
      "txHash": "0xc50231876d1a42fb755af3396c6e2bd0fcd85b3d430d14ac23ecc40543d73c20",
      "kind": "transparent"
    },
    {
      "address": "0x185B4b6484873C4C35Ae4E1592611E574d8c9CC3",
      "txHash": "0x5e216a2e29cb4a5c26bb1e96f46adc654648df7045f42d8657c3edc9cbe2ede7",
      "kind": "transparent"
    },
    {
      "address": "0x660fA435Bdf33cdfD9e58D95460da0c626aBFc38",
      "txHash": "0xc730c7483f505b880c0389b2b52c1d4f39ced94ed980971d92091d777f0e48a6",
      "kind": "transparent"
    },
    {
      "address": "0x57fb79BB29b5B5481E39226F91a1d4F753D52a2a",
      "txHash": "0x414bc72193a80b37b27c9bf2fddb593d1799e47e029f17fa0658d9101f9d15fe",
      "kind": "transparent"
    },
    {
      "address": "0xeB034C5608814dc2ff79bFd9c209D194e0761686",
      "txHash": "0xa242416e6c3f744d82315c661952174f6cbc6af32cf86a655074fe8a0071dad5",
      "kind": "transparent"
    },
    {
      "address": "0x9eaE3226bB3BE4dcd42DdDB0aD281f6C984AD13b",
      "txHash": "0xc86f61d7bf0d9eac8f9feeb5b8544fb0553efbca94cfcd0924c26bbaad088928",
      "kind": "transparent"
    },
    {
      "address": "0xB4383cB27193bFB957503D00419E60fd510EbEb0",
      "txHash": "0x7cfd3cf54a07169b87dcc00a1dc0043d054818f0c06f3675bc2e38c21d354d49",
      "kind": "transparent"
    },
    {
      "address": "0x9CB3F46401465E51e697E3093ed9A92242E253dc",
      "txHash": "0x4b1c0f7db64c4b99236b6a9be333ec841a2796afbf9436a26cc8cf1bf3f9d1d2",
      "kind": "transparent"
    },
    {
      "address": "0x956788EBDBc0377214505df163d3ae42E35e9264",
      "txHash": "0xf806473fa9dd92f57cb2c26fbbe18b3f12f08a995bcf69cdb46e172893ee9ab0",
      "kind": "transparent"
    },
    {
      "address": "0xb06E854bD4CE0FeA44654a3fBaB2f85FD51B2d5F",
      "txHash": "0x35a5c53d737869dd6e4caf02f21126ac08f384ccf1957dc1c03cb713772e4626",
      "kind": "transparent"
    },
    {
      "address": "0x0a137Be840e36B842caae568918D2aDB387b444e",
      "txHash": "0x61d3430702d0a351b65ab9580d84a75e734402221f2cb16692a0b7b9a1416150",
      "kind": "transparent"
    },
    {
      "address": "0xEe89acc8f67A59F3Fe9c3ece44a2c4D51C2e67F4",
      "txHash": "0x49fa5264be896369db1be7c994ed42b61bf26f66c74b6c67cfeb52d64c09d8a3",
      "kind": "transparent"
    },
    {
      "address": "0xbb6A383890Bd3FA8EE1e85Fe9BC8ad0C25271fd7",
      "txHash": "0x8771c0505ebc730d905c34153c68c9af8499ab3181cd41902526d502c9f57e6a",
      "kind": "transparent"
    },
    {
      "address": "0x5cFa4c49Ef094d4bDe1d7a25314229Ff22eBaf3E",
      "txHash": "0x7b8c47c70901267c2d5ad7bf802ffc57d80bb7e5de0351a4ad3f9452ec9e5f33",
      "kind": "transparent"
    },
    {
      "address": "0xfac1CC26C2DCCB31FcAb8f63348c4a49beF6F25B",
      "txHash": "0xea3e80b3b41fc20db7502b83f8df80f1735418b220263246ae9f0f21a094671a",
      "kind": "transparent"
    },
    {
      "address": "0x5DB4F48De2584816500Eca951e4409dBe1686e40",
      "txHash": "0x1261323223d64382b45b7bfc1debb5b46d6d221f729f0092d0f3d36adf527a99",
      "kind": "transparent"
    },
    {
      "address": "0x2Ce6a7a47735bB678b3f3D653950159ed52F2E18",
      "txHash": "0xfa124e81b7c156b2f46dfc565dd1997f42f97ad5508da57f8b5525ffafc6605a",
      "kind": "transparent"
    },
    {
      "address": "0x567a7f44c14775d1C9b9dA367E8dEac776241D35",
      "txHash": "0xc504767c27c412737ceddd4d7146567914ac63fb79eae7ef5f75eaab95d25c7a",
      "kind": "transparent"
    },
    {
      "address": "0x03804933785C0A6250183415Cc72E9207f25a6e5",
      "txHash": "0x4a07cd637e01a89dc78ea0443bfa1d785fd60bf42ca94dfd968e74d3defffa1b",
      "kind": "transparent"
    },
    {
      "address": "0xF9218F9271658538d5bb269B004bEEf1c3E8D4BF",
      "txHash": "0x44afe108af48a7e9bead8f28b33b81d38f7cfd59b56919d7be45840618420aef",
      "kind": "transparent"
    },
    {
      "address": "0x75e0Dc0bcE72DD69EadA064F9f77d085FAF0eD6e",
      "txHash": "0xaa657cb931c314587e2781ac99b20f434034d133b40066a16655b2f0a3af701c",
      "kind": "transparent"
    },
    {
      "address": "0xc2B6914fb190abC74797E6714Ec91D784879c4B7",
      "txHash": "0x60e7c1c31f4c5f798fbc9b6054083f6004aad7270a746acba871c4123ec4e7af",
      "kind": "transparent"
    },
    {
      "address": "0x425c4E38Ee5fCE0548Adb583FB36FD1027717A26",
      "txHash": "0x6a70943e8a65ed246b3d4f24c65ebc3ce84ef0f87e7b9115664c46c17b529e0e",
      "kind": "transparent"
    },
    {
      "address": "0x145D44f7c692c398B27b87897D295f09C9C295d0",
      "txHash": "0x6de863594cdd1d4eac7424b300a899b2fabad054ed16afba30acf3cb3d27ead5",
      "kind": "transparent"
    },
    {
      "address": "0x0093627336354122934bd2b7E928fBcc9BC1209e",
      "txHash": "0xc053af1b1d43f0e68fb72ed6c75930140ae81bad13b145f92f07b8a37153ce8c",
      "kind": "transparent"
    },
    {
      "address": "0x190f4B3E93709807027E08B709c963B16b4A9387",
      "txHash": "0x388a28c15f6831d5165e1d05d8c487bad9294a8b600feceb5ba4aab6827c431a",
      "kind": "transparent"
    },
    {
      "address": "0x46b0a4e91A4A53513e23C70fDd52570eCCa82E15",
      "txHash": "0x8eeb68cbc7ccda0a47ca0b3ba61824393cf8496b76578a950f9094fd3518e1fe",
      "kind": "transparent"
    },
    {
      "address": "0x102dE6E86F257A804a01ab66358617a02Db626A4",
      "txHash": "0x338573013e000d839f64e78844cc5d798dd7bc4ed2b253e0377b9eb9ec6e8bbd",
      "kind": "transparent"
    },
    {
      "address": "0xD8b1B30a3452cc6650C59cE1D80c7cbbfA429060",
      "txHash": "0x644c4d6d8a2fd16a0f2a2879ddfef9613c5af4575c8bec6f397f615a649d5bcd",
      "kind": "transparent"
    },
    {
      "address": "0x4E34df14447048dAC35c3128D3716Bd06C878a13",
      "txHash": "0x8a0f27c676bb05623394f54aea502297ce5a53e3cab433b77a2ffa83df277565",
      "kind": "transparent"
    },
    {
      "address": "0xE919ac73f41C8E4bF924AaC341e52b35c84cdFE7",
      "txHash": "0xad28d88b041bc1bee4c0fb74758bc8be806125aa941e661c987f68a87d4acc29",
      "kind": "transparent"
    },
    {
      "address": "0xcd8A95F75c2B18C0EB44108055C6929895cA299A",
      "txHash": "0x4c816452e64b3beb1d92abd7cbac55602c5e3b237f98fd4617072bbc434ced1e",
      "kind": "transparent"
    },
    {
      "address": "0xc89964B1B7de853cfA429842bf7E458975Fcf494",
      "txHash": "0xccc073646e1be758c5f9d8192ccc8cf4e9814651c604bc610c2c5d85742be674",
      "kind": "transparent"
    },
    {
      "address": "0x2ace2aA5E1f4F12B84922Af28BcE5f5BBb3C4BeE",
      "txHash": "0xc13fc9fbe6c5e67a7424c20ac48c2026f7eb79c9d3fe09cc84da8dfbf859714f",
      "kind": "transparent"
    },
    {
      "address": "0x0e92f168D988ea519E116C1904bA5ec1fd0c7600",
      "txHash": "0x953ff5f55cf66ee99fdedf56253a0a0fb97a09c2843af1fb0ea1dea665d8b300",
      "kind": "transparent"
    }
  ],
  "impls": {
    "2319d745318e629e28457a63f4071fa5bc57e1a9321adc35f73cadd5d73ba6da": {
      "address": "0x68881d6266f3Ae8f4e3bf4a5CACd9319f26103aB",
      "txHash": "0xed19608ee79900a1ca811686df3ed27a959e5be4b9b491cea12ea7b60ff7c420",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "ERC20Detailed",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol:13"
          },
          {
            "contract": "ERC20Detailed",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol:14"
          },
          {
            "contract": "ERC20Detailed",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol:15"
          },
          {
            "contract": "ERC20Detailed",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol:44"
          },
          {
            "contract": "ERC20",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:24"
          },
          {
            "contract": "ERC20",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:26"
          },
          {
            "contract": "ERC20",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:28"
          },
          {
            "contract": "ERC20",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:194"
          },
          {
            "contract": "MinterRole",
            "label": "_minters",
            "type": "t_struct(Role)33_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol:14"
          },
          {
            "contract": "MinterRole",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol:49"
          },
          {
            "contract": "ERC20Mintable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol:27"
          },
          {
            "contract": "PauserRole",
            "label": "_pausers",
            "type": "t_struct(Role)33_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/PauserRole.sol:14"
          },
          {
            "contract": "PauserRole",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/PauserRole.sol:49"
          },
          {
            "contract": "Pausable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol:16"
          },
          {
            "contract": "Pausable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol:63"
          },
          {
            "contract": "ERC20Pausable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Pausable.sol:36"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(Role)33_storage": {
            "label": "struct Roles.Role",
            "members": [
              {
                "label": "bearer",
                "type": "t_mapping(t_address,t_bool)"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "00f25cc9538172bb3764a06e0bf9c640b05047cea71b78501140f00f911857d8": {
      "address": "0xd3561A044a740D07487f07b1236558574a8d0974",
      "txHash": "0xde731b29313001e259c3aa65853ce146aceed81d5601029e9d2232d0786015f2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "ERC165",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:21"
          },
          {
            "contract": "ERC165",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:46"
          },
          {
            "contract": "ERC721",
            "label": "_tokenOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:27"
          },
          {
            "contract": "ERC721",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:30"
          },
          {
            "contract": "ERC721",
            "label": "_ownedTokensCount",
            "type": "t_mapping(t_address,t_struct(Counter)375_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:33"
          },
          {
            "contract": "ERC721",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:36"
          },
          {
            "contract": "ERC721",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:301"
          },
          {
            "contract": "ERC721Enumerable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol:16"
          },
          {
            "contract": "ERC721Enumerable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol:19"
          },
          {
            "contract": "ERC721Enumerable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol:22"
          },
          {
            "contract": "ERC721Enumerable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol:25"
          },
          {
            "contract": "ERC721Enumerable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol:207"
          },
          {
            "contract": "ERC721Metadata",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol:12"
          },
          {
            "contract": "ERC721Metadata",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol:15"
          },
          {
            "contract": "ERC721Metadata",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol:18"
          },
          {
            "contract": "ERC721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol:98"
          },
          {
            "contract": "ERC721Full",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol:15"
          },
          {
            "contract": "MinterRole",
            "label": "_minters",
            "type": "t_struct(Role)33_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol:14"
          },
          {
            "contract": "MinterRole",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol:49"
          },
          {
            "contract": "ERC721MetadataMintable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol:32"
          },
          {
            "contract": "PauserRole",
            "label": "_pausers",
            "type": "t_struct(Role)33_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/PauserRole.sol:14"
          },
          {
            "contract": "PauserRole",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/PauserRole.sol:49"
          },
          {
            "contract": "Pausable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol:16"
          },
          {
            "contract": "Pausable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol:63"
          },
          {
            "contract": "ERC721Pausable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Pausable.sol:29"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(Role)33_storage": {
            "label": "struct Roles.Role",
            "members": [
              {
                "label": "bearer",
                "type": "t_mapping(t_address,t_bool)"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_struct(Counter)375_storage)": {
            "label": "mapping(address => struct Counters.Counter)"
          },
          "t_struct(Counter)375_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    },
    "bd990a9e545c1add4e55eb8da790e97f40d0a8161e84df879e5341965aa11372": {
      "address": "0x3C5d3e20ab495ecee10b4E6eeAd04Dd21d780b98",
      "txHash": "0x913a2a10edfea1cf72d3165f2abd9ada9ee052e9f2caf85c397172e6cf2b1d9f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:35"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:37"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:39"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:40"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_defaultOperatorsArray",
            "type": "t_array(t_address)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:46"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_defaultOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:49"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_operators",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:52"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_revokedDefaultOperators",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:53"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:56"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:549"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)5582_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)5582_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)5582_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5281_storage"
              }
            ]
          },
          "t_struct(Set)5281_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          }
        }
      }
    },
    "2b67930c6932117cd27cf52f9c6e2a3899d3951ab9b5b4490807bcef46ef7e39": {
      "address": "0x2AE26a38Bc11CE4FdfCaf0431D5a708b17E0dD99",
      "txHash": "0x82cc7e8062f2dd4d81786d45375a9552ebdfab812f2980005f5858e0136965dd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)5582_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "ERC1155BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:49"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC1155PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol:48"
          },
          {
            "contract": "ERC1155PresetMinterPauserUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol:142"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:67"
          },
          {
            "contract": "Removal",
            "label": "_vintages",
            "type": "t_mapping(t_uint256,t_struct(Vintage)6829_storage)",
            "src": "contracts/Removal.sol:30"
          },
          {
            "contract": "Removal",
            "label": "_latestTokenId",
            "type": "t_uint256",
            "src": "contracts/Removal.sol:31"
          },
          {
            "contract": "Removal",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/Removal.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Vintage)6829_storage)": {
            "label": "mapping(uint256 => struct Removal.Vintage)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Vintage)6829_storage": {
            "label": "struct Removal.Vintage",
            "members": [
              {
                "label": "supplier",
                "type": "t_address"
              },
              {
                "label": "vintage",
                "type": "t_uint16"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)5582_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)5582_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5281_storage"
              }
            ]
          },
          "t_struct(Set)5281_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "ef9d774cfa526a85171fa42a4db484ad7f04c65a1c5bc894d10c31ab7c84a6f4": {
      "address": "0xEdf0bef28943aE9d2ee7d84cF1AEEC85588655b7",
      "txHash": "0x484036e0170cf564361e9310e4e6ab909310e09b1c74a828625fb93b585c8a64",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)5582_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "ERC1155BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:49"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC1155PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol:48"
          },
          {
            "contract": "ERC1155PresetMinterPauserUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol:142"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:67"
          },
          {
            "contract": "Certificate",
            "label": "_sources",
            "type": "t_mapping(t_uint256,t_array(t_struct(Source)5888_storage)dyn_storage)",
            "src": "contracts/Certificate.sol:29"
          },
          {
            "contract": "Certificate",
            "label": "_latestTokenId",
            "type": "t_uint256",
            "src": "contracts/Certificate.sol:33"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_array(t_struct(Source)5888_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Certificate.Source[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Source)5888_storage)dyn_storage": {
            "label": "struct Certificate.Source[]"
          },
          "t_struct(Source)5888_storage": {
            "label": "struct Certificate.Source",
            "members": [
              {
                "label": "removalId",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)5582_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)5582_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5281_storage"
              }
            ]
          },
          "t_struct(Set)5281_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "f68f230d84e4b4d1412617fb0a7061833b48a3213948359db2b6d3b52dd414fc": {
      "address": "0xcb3a9Df3363315fb6E190A77C9421ecc6a92cfF0",
      "txHash": "0x074ce7c4ee444692f1ac5fb4c551b3bee5aff6b5b3676761b1c56a4815b97984",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)5582_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:27"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:40"
          },
          {
            "contract": "FIFOMarket",
            "label": "_erc1820",
            "type": "t_contract(IERC1820RegistryUpgradeable)4958",
            "src": "contracts/FIFOMarket.sol:28"
          },
          {
            "contract": "FIFOMarket",
            "label": "_removal",
            "type": "t_contract(Removal)7036",
            "src": "contracts/FIFOMarket.sol:29"
          },
          {
            "contract": "FIFOMarket",
            "label": "_certificate",
            "type": "t_contract(Certificate)6077",
            "src": "contracts/FIFOMarket.sol:30"
          },
          {
            "contract": "FIFOMarket",
            "label": "_nori",
            "type": "t_contract(NORI)6807",
            "src": "contracts/FIFOMarket.sol:31"
          },
          {
            "contract": "FIFOMarket",
            "label": "_queue",
            "type": "t_struct(UintSet)5739_storage",
            "src": "contracts/FIFOMarket.sol:32"
          },
          {
            "contract": "FIFOMarket",
            "label": "_noriFeeWallet",
            "type": "t_address",
            "src": "contracts/FIFOMarket.sol:33"
          },
          {
            "contract": "FIFOMarket",
            "label": "_noriFee",
            "type": "t_uint256",
            "src": "contracts/FIFOMarket.sol:34"
          }
        ],
        "types": {
          "t_contract(IERC1820RegistryUpgradeable)4958": {
            "label": "contract IERC1820RegistryUpgradeable"
          },
          "t_contract(Removal)7036": {
            "label": "contract Removal"
          },
          "t_contract(Certificate)6077": {
            "label": "contract Certificate"
          },
          "t_contract(NORI)6807": {
            "label": "contract NORI"
          },
          "t_struct(UintSet)5739_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5281_storage"
              }
            ]
          },
          "t_struct(Set)5281_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)5582_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)5582_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5281_storage"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a5f957384066aa0c06b72655b5fc307338a223f9700992bed38c0f148e080d3d": {
      "address": "0xa5C7b61B786CF4EcBD24C6e62A3F8b991aDf5712",
      "txHash": "0x6f14ab2e06b4edf231f8d0cb05f1f3e4a36ed61d3ddfa1744b54689067987496",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:35"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:37"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:39"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:40"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_defaultOperatorsArray",
            "type": "t_array(t_address)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:46"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_defaultOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:49"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_operators",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:52"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_revokedDefaultOperators",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:53"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:56"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:549"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)5610_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)5610_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)5610_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5309_storage"
              }
            ]
          },
          "t_struct(Set)5309_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          }
        }
      }
    },
    "6fd960a5d9dbd2284896f54fa1cac74d2b86d3695ca5852631e6f76d78d57f01": {
      "address": "0xDdb5B80312cA345F41B5B6411254c17beC008FB3",
      "txHash": "0x36cf71249acee05d596d8f74b58fbdce8efb7b4b4d964fb27d1b8c2f27b43f2a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)5610_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "ERC1155BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:49"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC1155PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol:48"
          },
          {
            "contract": "ERC1155PresetMinterPauserUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol:142"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:67"
          },
          {
            "contract": "Removal",
            "label": "_vintages",
            "type": "t_mapping(t_uint256,t_struct(Vintage)6867_storage)",
            "src": "contracts/Removal.sol:30"
          },
          {
            "contract": "Removal",
            "label": "_latestTokenId",
            "type": "t_uint256",
            "src": "contracts/Removal.sol:31"
          },
          {
            "contract": "Removal",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/Removal.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Vintage)6867_storage)": {
            "label": "mapping(uint256 => struct Removal.Vintage)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Vintage)6867_storage": {
            "label": "struct Removal.Vintage",
            "members": [
              {
                "label": "supplier",
                "type": "t_address"
              },
              {
                "label": "vintage",
                "type": "t_uint16"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)5610_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)5610_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5309_storage"
              }
            ]
          },
          "t_struct(Set)5309_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "859dcc315b7021c703e053dbb098786f3a3709c14abde542775ce2bd4c6d37cc": {
      "address": "0xDd9856600e7BDb9F800E5c3BDF31B8a2388B0319",
      "txHash": "0xca15b4558a84fb2ddd64b6b981006832ec31e54ea177313a012cc8dd8c98ef62",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)5610_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "ERC1155BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:49"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC1155PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol:48"
          },
          {
            "contract": "ERC1155PresetMinterPauserUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol:142"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:67"
          },
          {
            "contract": "Certificate",
            "label": "_sources",
            "type": "t_mapping(t_uint256,t_array(t_struct(Source)5916_storage)dyn_storage)",
            "src": "contracts/Certificate.sol:29"
          },
          {
            "contract": "Certificate",
            "label": "_latestTokenId",
            "type": "t_uint256",
            "src": "contracts/Certificate.sol:33"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_array(t_struct(Source)5916_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Certificate.Source[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Source)5916_storage)dyn_storage": {
            "label": "struct Certificate.Source[]"
          },
          "t_struct(Source)5916_storage": {
            "label": "struct Certificate.Source",
            "members": [
              {
                "label": "removalId",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)5610_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)5610_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5309_storage"
              }
            ]
          },
          "t_struct(Set)5309_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "5c65e5def1950db5bf4d8e9c25d051f4984434199355b7f3a71a52a380fa207a": {
      "address": "0x7C7056598e0B83A09BbB18b72d341c8875A8ac3a",
      "txHash": "0xf9bc5f75bfc2a44a5e7df52be86870a6763bf277e6926c124680cf808210e92b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)5610_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:27"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:40"
          },
          {
            "contract": "FIFOMarket",
            "label": "_erc1820",
            "type": "t_contract(IERC1820RegistryUpgradeable)4986",
            "src": "contracts/FIFOMarket.sol:28"
          },
          {
            "contract": "FIFOMarket",
            "label": "_removal",
            "type": "t_contract(Removal)7074",
            "src": "contracts/FIFOMarket.sol:29"
          },
          {
            "contract": "FIFOMarket",
            "label": "_certificate",
            "type": "t_contract(Certificate)6105",
            "src": "contracts/FIFOMarket.sol:30"
          },
          {
            "contract": "FIFOMarket",
            "label": "_nori",
            "type": "t_contract(NORI)6845",
            "src": "contracts/FIFOMarket.sol:31"
          },
          {
            "contract": "FIFOMarket",
            "label": "_queue",
            "type": "t_struct(UintSet)5767_storage",
            "src": "contracts/FIFOMarket.sol:32"
          },
          {
            "contract": "FIFOMarket",
            "label": "_noriFeeWallet",
            "type": "t_address",
            "src": "contracts/FIFOMarket.sol:33"
          },
          {
            "contract": "FIFOMarket",
            "label": "_noriFee",
            "type": "t_uint256",
            "src": "contracts/FIFOMarket.sol:34"
          }
        ],
        "types": {
          "t_contract(IERC1820RegistryUpgradeable)4986": {
            "label": "contract IERC1820RegistryUpgradeable"
          },
          "t_contract(Removal)7074": {
            "label": "contract Removal"
          },
          "t_contract(Certificate)6105": {
            "label": "contract Certificate"
          },
          "t_contract(NORI)6845": {
            "label": "contract NORI"
          },
          "t_struct(UintSet)5767_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5309_storage"
              }
            ]
          },
          "t_struct(Set)5309_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)5610_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)5610_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5309_storage"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f3c71364e82bd795d789b07eaf63ff57a732b0934398dd928886b8f2a22a9789": {
      "address": "0x7E7E4A81e22e2C4bA769f1151258c33dC1EF06a8",
      "txHash": "0x5e8623bf5dedbbda67eace8239f17c42a3392846d6316f4d83637ce68e96b27c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:35"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:37"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:39"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:40"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_defaultOperatorsArray",
            "type": "t_array(t_address)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:46"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_defaultOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:49"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_operators",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:52"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_revokedDefaultOperators",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:53"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:56"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:559"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)6932_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)6932_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)6932_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)6631_storage"
              }
            ]
          },
          "t_struct(Set)6631_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          }
        }
      }
    }
  }
}
