{
  "manifestVersion": "3.2",
  "impls": {
    "8d2769b9cd31a69eaab0b8fedbef149c90e3ca7e8113a4418de9b9ce32372b53": {
      "address": "0x70E15d2263635E6cDFF759b6422EBf6444DF1661",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades/contracts/Initializable.sol"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades/contracts/Initializable.sol"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades/contracts/Initializable.sol"
          },
          {
            "contract": "ERC165",
            "label": "_supportedInterfaces",
            "type": "t_mapping(unknown,t_bool)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol"
          },
          {
            "contract": "ERC165",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol"
          },
          {
            "contract": "ERC721",
            "label": "_tokenOwner",
            "type": "t_mapping(unknown,t_address)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol"
          },
          {
            "contract": "ERC721",
            "label": "_tokenApprovals",
            "type": "t_mapping(unknown,t_address)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol"
          },
          {
            "contract": "ERC721",
            "label": "_ownedTokensCount",
            "type": "t_mapping(unknown,t_struct(Counter)6_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol"
          },
          {
            "contract": "ERC721",
            "label": "_operatorApprovals",
            "type": "t_mapping(unknown,t_bool)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol"
          },
          {
            "contract": "ERC721",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol"
          },
          {
            "contract": "ERC721Enumerable",
            "label": "_ownedTokens",
            "type": "t_mapping(unknown,t_array(t_uint256)dyn_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol"
          },
          {
            "contract": "ERC721Enumerable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(unknown,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol"
          },
          {
            "contract": "ERC721Enumerable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol"
          },
          {
            "contract": "ERC721Enumerable",
            "label": "_allTokensIndex",
            "type": "t_mapping(unknown,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol"
          },
          {
            "contract": "ERC721Enumerable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol"
          },
          {
            "contract": "ERC721Metadata",
            "label": "_name",
            "type": "t_string",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol"
          },
          {
            "contract": "ERC721Metadata",
            "label": "_symbol",
            "type": "t_string",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol"
          },
          {
            "contract": "ERC721Metadata",
            "label": "_tokenURIs",
            "type": "t_mapping(unknown,t_string)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol"
          },
          {
            "contract": "ERC721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol"
          },
          {
            "contract": "ERC721Full",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol"
          },
          {
            "contract": "MinterRole",
            "label": "_minters",
            "type": "t_struct(Role)13_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol"
          },
          {
            "contract": "MinterRole",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol"
          },
          {
            "contract": "ERC721MetadataMintable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol"
          },
          {
            "contract": "PauserRole",
            "label": "_pausers",
            "type": "t_struct(Role)13_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/PauserRole.sol"
          },
          {
            "contract": "PauserRole",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/PauserRole.sol"
          },
          {
            "contract": "Pausable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol"
          },
          {
            "contract": "Pausable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol"
          },
          {
            "contract": "ERC721Pausable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Pausable.sol"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(unknown,t_bool)": {
            "label": "mapping(key => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(unknown,t_address)": {
            "label": "mapping(key => address)"
          },
          "t_struct(Counter)6_storage": {
            "label": "Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(unknown,t_struct(Counter)6_storage)": {
            "label": "Counter)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(unknown,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(key => uint256[])"
          },
          "t_mapping(unknown,t_uint256)": {
            "label": "mapping(key => uint256)"
          },
          "t_string": {
            "label": "string"
          },
          "t_mapping(unknown,t_string)": {
            "label": "mapping(key => string)"
          },
          "t_struct(Role)13_storage": {
            "label": "Role",
            "members": [
              {
                "label": "bearer",
                "type": "t_mapping(unknown,t_bool)"
              }
            ]
          }
        }
      }
    },
    "715d8ade7e42268dfe8dfb2dbc46050cda296e50826e18e89f876aec9b5d192f": {
      "address": "0x6bdF8F75124aE47B6E18F9C0B92E10D69ff8D658",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades/contracts/Initializable.sol"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades/contracts/Initializable.sol"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades/contracts/Initializable.sol"
          },
          {
            "contract": "ERC20Detailed",
            "label": "_name",
            "type": "t_string",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol"
          },
          {
            "contract": "ERC20Detailed",
            "label": "_symbol",
            "type": "t_string",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol"
          },
          {
            "contract": "ERC20Detailed",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol"
          },
          {
            "contract": "ERC20Detailed",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol"
          },
          {
            "contract": "ERC20",
            "label": "_balances",
            "type": "t_mapping(unknown,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol"
          },
          {
            "contract": "ERC20",
            "label": "_allowances",
            "type": "t_mapping(unknown,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol"
          },
          {
            "contract": "ERC20",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol"
          },
          {
            "contract": "ERC20",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol"
          },
          {
            "contract": "MinterRole",
            "label": "_minters",
            "type": "t_struct(Role)6_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol"
          },
          {
            "contract": "MinterRole",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol"
          },
          {
            "contract": "ERC20Mintable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol"
          },
          {
            "contract": "PauserRole",
            "label": "_pausers",
            "type": "t_struct(Role)6_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/PauserRole.sol"
          },
          {
            "contract": "PauserRole",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/PauserRole.sol"
          },
          {
            "contract": "Pausable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol"
          },
          {
            "contract": "Pausable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol"
          },
          {
            "contract": "ERC20Pausable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Pausable.sol"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(unknown,t_uint256)": {
            "label": "mapping(key => uint256)"
          },
          "t_struct(Role)6_storage": {
            "label": "Role",
            "members": [
              {
                "label": "bearer",
                "type": "t_mapping(unknown,t_bool)"
              }
            ]
          },
          "t_mapping(unknown,t_bool)": {
            "label": "mapping(key => bool)"
          }
        }
      }
    }
  },
  "proxies": [
    {
      "address": "0xBBbD7AEBD29360a34ceA492e012B9A2119DEd306",
      "kind": "transparent"
    },
    {
      "address": "0x1f77C0415bc4E5B5Dcb33C796F9c8cd8cc1c259d",
      "kind": "transparent"
    }
  ],
  "admin": {
    "address": "0x4555cE4ef3F7DAEEC9535914b58e9b3C712D5612"
  }
}
