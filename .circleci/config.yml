version: 2
defaults: &defaults
  working_directory: ~/repo
  environment:
    - NODE_ENV: test
  docker:
    - image: circleci/node:9.11

jobs:
  setup-contract-tests:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Initialize submodules
          command: |
            git submodule init
            git submodule update --init --recursive

      - run:
          name: Setup Environment
          command: |
            echo 'export PATH=./node_modules/.bin:$PATH' >> $BASH_ENV
            echo 'export PATH=$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH' >> $BASH_ENV

      - restore_cache:
          key: v6-node_modules_dir-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: |
            yarn install --prefer-offline
      - save_cache:
          key: v6-node_modules_dir-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - ~/.cache

      - restore_cache:
          key: v1-contracts_build-{{ .Revision }}
      - run:
          name: Build Contracts
          command: ./node_modules/.bin/truffle compile
      - save_cache:
          key: v1-contracts_build-{{ .Revision }}
          paths:
            - 'contracts/build'

  run-unit-tests:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Initialize submodules
          command: |
            git submodule init
            git submodule update --init --recursive
      - run:
          name: Setup Environment
          command: |
            echo 'export PATH=./node_modules/.bin:$PATH' >> $BASH_ENV
            echo 'export PATH=$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH' >> $BASH_ENV

      - restore_cache:
          key: v1-contracts_build-{{ .Revision }}
      - restore_cache:
          key: v6-node_modules_dir-{{ checksum "yarn.lock" }}

      - run:
          name: Run Unit Tests
          command: UNIT=true yarn run test

  run-upgrade-tests:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Initialize submodules
          command: |
            git submodule init
            git submodule update --init --recursive
      - run:
          name: Setup Environment
          command: |
            echo 'export PATH=./node_modules/.bin:$PATH' >> $BASH_ENV
            echo 'export PATH=$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH' >> $BASH_ENV

      - restore_cache:
          key: v1-contracts_build-{{ .Revision }}
      - restore_cache:
          key: v6-node_modules_dir-{{ checksum "yarn.lock" }}

      - run:
          name: Run Upgrade Tests
          command: UPGRADES=true yarn run test

  run-coverage:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Initialize submodules
          command: |
            git submodule init
            git submodule update --init --recursive
      - run:
          name: Setup Environment
          command: |
            echo 'export PATH=./node_modules/.bin:$PATH' >> $BASH_ENV
            echo 'export PATH=$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH' >> $BASH_ENV

      - restore_cache:
          key: v1-contracts_build-{{ .Revision }}
      - restore_cache:
          key: v6-node_modules_dir-{{ checksum "yarn.lock" }}

      - run:
          name: Generate Contract Coverage
          command: yarn run sol:cov

  run-gasreport:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Initialize submodules
          command: |
            git submodule init
            git submodule update --init --recursive
      - restore_cache:
          key: v6-node_modules_dir-{{ checksum "yarn.lock" }}

      - run:
          name: Run Gas Report
          command: yarn run test:gasreport

workflows:
  version: 2
  test:
    jobs:
      - setup-contract-tests
      - run-unit-tests:
          requires:
            - setup-contract-tests
      - run-upgrade-tests:
          requires:
            - setup-contract-tests
# TODO: reenable these once they are working
#      - run-coverage:
#          requires:
#            - run-tests
#      - run-gasreport:
#          requires:
#            - run-tests
